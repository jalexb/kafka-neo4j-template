
import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id "com.github.davidmc24.gradle.plugin.avro-base" version "1.5.0"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.github.davidmc24.gradle.plugin.avro-base"

group = 'kafka.neo4j.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation('org.apache.avro:avro:1.11.1')
	implementation('org.apache.kafka:kafka-clients:3.3.1')
	implementation('org.apache.kafka:kafka-streams:3.3.1')
}

tasks.named('test') {
	useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resourcesavro")
	outputDir = file("dest/avro")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}